
public class Zaehler {
	private int einer;
	private int zehner;

	
	public Zaehler (int x, int y) {
		this.einer=x;
		this.zehner=y;
	}
	
	
	/* Soll die „Einer“ um Eins erhöhen, den aktuellen Wert
	der „Einer“ ausgeben und bei einem Überlauf der „Einer“ die Exception
	EinerUeberlauf werfen*/
	public void erhoeheUmEins() throws  EinerUeberlauf{
		
	}
	
	
	/* soll die „Zehner“ um Eins erhöhen, den aktuellen Wert
	der „Zehner“ ausgeben und bei einem Überlauf der „Zehner“ die Exception
	Ueberlauf werfen. */
	public void erhoeheUmZehn() throws Ueberlauf{
	
	}
	
	
	/* Soll um Eins hochzählen, indem die Methode erhoeheUmEins
	aufgerufen wird. Wird ein Überlauf der „Einer“ durch das Auftreten einer
	entsprechenden Exception signalisiert, dann sollen die „Einer“ zurück auf Null gesetzt
	und dafür die „Zehner“durch Aufruf von erhoeheUmZehn erhöht werden. Danach
	soll dieser Überlauffehler beseitigt sein. */
	public void zaehlen() {
		
	}
	
	
}
