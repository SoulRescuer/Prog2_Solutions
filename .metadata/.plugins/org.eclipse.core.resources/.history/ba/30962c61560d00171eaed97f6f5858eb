
public class Zaehler {
	private int einer = 0;
	private int zehner = 0;

	public Zaehler(int x, int y) {
		this.einer = x;
		this.zehner = y;
	}

	/*
	 * Soll die „Einer“ um Eins erhöhen, den aktuellen Wert der „Einer“ ausgeben
	 * und bei einem Überlauf der „Einer“ die Exception EinerUeberlauf werfen
	 */
	public void erhoeheUmEins(Zaehler a) throws EinerUeberlauf {
		if (a.einer <= 9) {
			throw new EinerUeberlauf();
		} else {
			a.einer = einer++;
		}

	}

	/*
	 * soll die „Zehner“ um Eins erhöhen, den aktuellen Wert der „Zehner“
	 * ausgeben und bei einem Überlauf der „Zehner“ also Zaehler= 100 die
	 * Exception Ueberlauf werfen.
	 */
	public void erhoeheUmZehn(Zaehler a) throws Ueberlauf {
		if (a.zehner <= 9) {
			throw new Ueberlauf();
		}else {
			a.zehner=zehner++;
		}

	}

	/*
	 * Soll um Eins hochzählen, indem die Methode erhoeheUmEins aufgerufen wird.
	 * Wird ein Überlauf der „Einer“ durch das Auftreten einer entsprechenden
	 * Exception signalisiert, dann sollen die „Einer“ zurück auf Null gesetzt
	 * und dafür die „Zehner“durch Aufruf von erhoeheUmZehn erhöht werden.
	 * Danach soll dieser Überlauffehler beseitigt sein.
	 */
	public void zaehlen() {

	}

}
